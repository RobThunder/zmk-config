/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        prev_word: prev_word {
            compatible = "zmk,behavior-macro";
            label = "Previous Word";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp RCTRL>;

            tap-ms = <10>;
            wait-ms = <10>;
        };

        next_word: next_word {
            compatible = "zmk,behavior-macro";
            label = "Next Word";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp RCTRL>;

            tap-ms = <10>;
            wait-ms = <10>;
        };

        prev_word_sel: prev_word_sel {
            compatible = "zmk,behavior-macro";
            label = "Previous Word Select";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL &kp RSHFT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp RCTRL &kp RSHFT>;

            tap-ms = <10>;
            wait-ms = <10>;
        };

        next_word_sel: next_word_sel {
            compatible = "zmk,behavior-macro";
            label = "Next Word Select";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RCTRL &kp RSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp RCTRL &kp RSHFT>;

            tap-ms = <10>;
            wait-ms = <10>;
        };

        alt_win_sticky: alt_win_sticky {
            compatible = "zmk,behavior-macro";
            label = "alt_win_sticky";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LEFT_ALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_WIN &kp LEFT_ALT>;

            tap-ms = <10>;
            wait-ms = <10>;
        };

        ctrl_layer_2: ctrl_layer_2 {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1>,
                <&macro_press>,
                <&mo MACRO_PLACEHOLDER &macro_param_2to1>,
                <&macro_press>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_param_2to1>,
                <&macro_release>,
                <&kp MACRO_PLACEHOLDER &macro_param_1to1>,
                <&macro_release>,
                <&mo MACRO_PLACEHOLDER>;

            label = "CTRL_LAYER_2";
        };
    };

    combos {
        compatible = "zmk,combos";

        new_combo {
            bindings = <&mo 4>;
            key-positions = <37 38>;
            layers = <0>;
        };
    };

    behaviors {
        double_tap_shift: double_tap_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "DOUBLE_TAP_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT>, <&caps_word>;
        };

        dt_sticky_layer_1: dt_sticky_layer_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "DT_STICKY_LAYER_1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&tog 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC            &kp N1  &kp N2  &kp N3    &kp N4                 &kp N5                                &kp N6  &kp N7     &kp N8          &kp N9   &kp N0    &kp BACKSPACE
&kp TAB            &kp Q   &kp W   &kp E     &kp R                  &kp T                                 &kp Y   &kp U      &kp I           &kp O    &kp P     &mt RIGHT_SHIFT MINUS
&double_tap_shift  &kp A   &kp S   &kp D     &kp F                  &kp G                                 &kp H   &kp J      &kp K           &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LCTRL          &kp Z   &kp X   &kp C     &kp V                  &kp B   &kp LCTRL  &kp RIGHT_BRACKET  &kp N   &kp M      &kp COMMA       &kp DOT  &kp FSLH  &mt RCTRL BACKSLASH
                                   &kp LALT  &ctrl_layer_2 2 LCTRL  &mo 1   &kp SPACE  &kp ENTER          &mo 1   &lt 2 DEL  &mt RALT EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans      &trans  &trans  &trans       &kp SLASH   &kp KP_MULTIPLY                  &kp SCROLLLOCK  &trans          &kp PRINTSCREEN  &trans          &trans         &trans
&caps_word  &trans  &kp N7  &kp N8       &kp N9      &kp MINUS                        &kp HOME        &prev_word      &kp UP           &next_word      &kp PAGE_UP    &trans
&trans      &trans  &kp N4  &kp N5       &kp N6      &kp PLUS                         &kp END         &kp LEFT        &kp DOWN         &kp RIGHT       &kp PAGE_DOWN  &trans
&trans      &trans  &kp N1  &kp N2       &kp N3      &kp EQUAL        &trans  &trans  &kp INS         &prev_word_sel  &trans           &next_word_sel  &trans         &alt_win_sticky
                            &mt LALT N0  &kp PERIOD  &trans           &trans  &trans  &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp GRAVE  &kp F1    &kp F2          &kp F3     &kp F4   &kp F5                   &trans  &trans  &trans  &trans            &trans             &trans
&trans     &kp F6    &kp UP_ARROW    &kp F8     &kp F9   &kp F10                  &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL
&trans     &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &kp F14  &kp F15                  &trans  &trans  &trans  &kp LEFT_BRACE    &kp RIGHT_BRACE    &trans
&trans     &kp F16   &kp F17         &kp F18    &kp F19  &kp F20  &trans  &trans  &trans  &trans  &trans  &trans            &trans             &trans
                                     &trans     &trans   &trans   &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        MIRROR_LAYER {
            bindings = <
&trans  &trans         &trans      &trans     &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp P          &kp O       &kp I      &kp O   &kp Y                             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SEMICOLON  &kp L       &kp K      &kp J   &kp H                             &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SLASH      &kp PERIOD  &kp COMMA  &kp M   &kp N          &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans     &trans  &kp BACKSPACE  &kp ENTER  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        MAINT_LAYER {
            bindings = <
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &trans  &trans  &trans  &trans  &trans
&ext_power EP_ON   &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&ext_power EP_OFF  &trans        &trans        &trans        &trans        &trans                        &trans  &trans  &trans  &trans  &trans  &trans
&trans             &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                               &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
